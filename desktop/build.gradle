sourceCompatibility = 15
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../assets"]

project.ext.mainClassName = "dev.basvs.coreward.DesktopLauncher"
project.ext.assetsDir = new File("../assets")

import org.gradle.internal.os.OperatingSystem
import com.badlogic.gdx.tools.texturepacker.TexturePacker

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes

task texturePacker {
    doLast {
        TexturePacker.process("../assets-originals/atlases/background", "../assets/atlases", "background")
        TexturePacker.process("../assets-originals/atlases/editor", "../assets/atlases", "editor")
        TexturePacker.process("../assets-originals/atlases/gui", "../assets/atlases", "gui")
        TexturePacker.process("../assets-originals/atlases/modules", "../assets/atlases", "modules")
        TexturePacker.process("../assets-originals/atlases/particles", "../assets/atlases", "particles")
    }
}